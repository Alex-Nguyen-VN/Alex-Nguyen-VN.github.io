---
title: "The Duck Curve and the invisible player in the energy market"
author: "Thanh Cuong Nguyen"
bibliography: citation.bib
date: "2024-09-30"
categories: [news]
image: "Krakeend_Anas_strepera_Jos_Zwarts_1.jpeg"
toc: true
toc-depth: 4
---

```{r}
#| echo: false
# Set up chunk for all slides
knitr::opts_chunk$set(
  fig.width = 6,
  fig.height = 4,
  fig.align = "center",
  out.width = "100%",
  code.line.numbers = FALSE,
  fig.retina = 4,
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  cache = FALSE,
  dev.args = list(pointsize = 11)
)
```

```{r Load the lib}
library(tidyverse)
library(lubridate)
library(patchwork)
```

```{r}
# Plot options and themes
options(
  digits = 2,
  width = 60,
  ggplot2.continuous.colour = "viridis",
  ggplot2.continuous.fill = "viridis",
  ggplot2.discrete.colour = c("#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442"),
  ggplot2.discrete.fill = c("#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442")
)

theme_set(theme_bw(base_size = 14) +
   theme(
     aspect.ratio = 1,
     plot.background = element_rect(fill = 'transparent', colour = NA),
     plot.title.position = "plot",
     plot.title = element_text(size = 14),
     panel.background = element_rect(fill = 'transparent', colour = NA),
     legend.background = element_rect(fill = 'transparent', colour = NA),
     legend.key = element_rect(fill = 'transparent', colour = NA),
     legend.text = element_text(size = 8),    # Adjust legend text siz
     axis.text = element_text(size = 10)  # Increase axis text size for readability
   )
)
```

```{r Load the data, include=FALSE, cache=TRUE}
# Step 2: List all the CSV files in the folder
folder_path <- "data/Public_Actual_Demand_2024_June"
file_list_1 <- list.files(path = folder_path, full.names = TRUE)

# Step 3: Load and combine all CSV files into one dataset
actual_demand_june <- do.call(rbind, lapply(file_list_1, function(file) {
  read_csv(file, skip = 2, n_max = 240, col_select = -c(1,2,3,4), col_name = FALSE)
}))
actual_demand_june <- actual_demand_june %>%
  rename(
    REGIONID = X5,
    INTERVAL_DATETIME = X6,
    OPERATIONAL_DEMAND = X7,
    OPERATIONAL_DEMAND_ADJUSTMENT = X8,
    WDR_ESTIMATE = X9,
    LASTCHANGED = X10
  )
```

```{r Clean the data, include=FALSE}
actual_demand_june <- actual_demand_june |>
  mutate(
    DATE = as.Date(INTERVAL_DATETIME),
    TIME = str_extract(INTERVAL_DATETIME, pattern = "\\d{2}:\\d{2}:\\d{2}"),
    REGIONID = as.factor(REGIONID),
    OPERATIONAL_DEMAND = as.numeric(OPERATIONAL_DEMAND),
    OPERATIONAL_DEMAND_ADJUSTMENT = as.numeric(OPERATIONAL_DEMAND_ADJUSTMENT),
    WDR_ESTIMATE = as.numeric(WDR_ESTIMATE),
  )

actual_demand_june <- actual_demand_june |>
  mutate(TIME = hms(TIME))
```

```{r Plot the actual mean}
plot_mean <- actual_demand_june |>
  group_by(REGIONID, TIME) |>
  summarise(
    mean_demand = mean(OPERATIONAL_DEMAND, na.rm = TRUE),
    sd_demand = sd(OPERATIONAL_DEMAND, na.rm = TRUE)
  ) |>
  ggplot(aes(x = TIME, y = mean_demand)) +
  geom_line() +
  facet_wrap(~REGIONID, scale = "free_y") +
  scale_x_time(labels = scales::time_format("%H:%M"), breaks = scales::breaks_width("8 hours")) +
  ylim(0, NA) +
  labs(title = "Mean operational demand for all regions in June 2024") +
  theme_get()
```

```{r Load the rooftop, include=FALSE, cache = TRUE}
# Step 2: List all the CSV files in the folder
folder_path_2 <- "data/rooftop"
file_list_2 <- list.files(path = folder_path_2, pattern = "*.csv", full.names = TRUE)

# Step 3: Load and combine all CSV files into one dataset
actual_RV_gen <- do.call(rbind, lapply(file_list_2, function(file) {
  read_csv(file, skip = 2, n_max = 10, col_select = -c(1,2,3,4), col_name = FALSE)
}))
```

```{r Clean the rooftop, include=FALSE}
actual_RV_gen <- actual_RV_gen |>
  select(-X9,-X10) |>
  rename(
    INTERVAL_DATETIME = X5,
    REGIONID = X6,
    POWER = X7,
    QI = X8)
actual_RV_gen <- actual_RV_gen |>
  mutate(
    DATE = as.Date(INTERVAL_DATETIME),
    TIME = str_extract(INTERVAL_DATETIME, pattern = "\\d{2}:\\d{2}:\\d{2}"),
    REGIONID = as.factor(REGIONID),
    POWER = as.numeric(POWER)
  ) |>
  select(-QI) |>
  select(REGIONID, INTERVAL_DATETIME, DATE, TIME, POWER)

actual_RV_gen <- actual_RV_gen |>
  filter(REGIONID %in% c("QLD1", "NSW1", "VIC1", "TAS1", "SA1"))
actual_RV_gen <- actual_RV_gen |>
  mutate(TIME = hms(TIME))
```

```{r Plot the RV}
plot_gen <- actual_RV_gen |>
  group_by(REGIONID, TIME) |>
  summarise(
    mean_gen = mean(POWER, na.rm = TRUE),
  ) |>
  ggplot(aes(x = TIME, y = mean_gen)) +
  geom_line() +
  facet_wrap(~REGIONID, scale = "free_y") +
  scale_x_time(labels = scales::time_format("%H:%M"), breaks = scales::breaks_width("8 hours"))

actual_mean <- actual_demand_june |>
  group_by(REGIONID, TIME) |>
  summarise(
    mean_demand = mean(OPERATIONAL_DEMAND, na.rm = TRUE),
    sd_demand = sd(OPERATIONAL_DEMAND, na.rm = TRUE)
  )

plot_gen_comb <- plot_gen +
  geom_line(data = actual_mean, aes(x = TIME, y = mean_demand), color = "red") +
  geom_vline(xintercept = as.numeric(hms("07:00:00")), linetype = "dashed") +
  geom_vline(xintercept = as.numeric(hms("18:00:00")), linetype = "dashed") +
  labs(x = NULL, y = NULL, colors = "Type")

```

```{r}
plot_duck <- actual_mean |>
  ggplot(aes(x = TIME, y = mean_demand, fill = REGIONID)) +
  geom_area() +
  theme_get() +
  scale_x_time(labels = scales::time_format("%H:%M")) +
  theme(panel.grid.minor = element_blank()) +
  scale_fill_viridis_d() +
  labs(title = "Mean operational demand for all regions in June 2024")
```

```{r}
installation_size <- read_csv("data/Install.csv")
installation_size <- installation_size |>
  filter(Postcode != "3818" & Postcode != "6448") |>
  mutate(regionid = case_when(
    Postcode == "2XXX" ~ "NSW1",
    Postcode == "3XXX" ~ "VIC1",
    Postcode == "4XXX" ~ "QLD1",
    Postcode == "5XXX" ~ "SA1",
    Postcode == "7XXX" ~ "TAS1"
  ))


installation_size$Month <- ymd(paste0(installation_size$Month, "-01"))

installation_size <- installation_size |>
  rename(time = Month, capacity = `Capacity (kW)`)

installation_size <- installation_size |>
  mutate(
    month = month(time),
    year = year(time),
  )

install_plot <- installation_size |>
  na.omit() |>
  group_by(regionid, year) |>
  summarise(sum_capacity = sum(capacity)) |>
  ggplot(aes(x = year, y = sum_capacity, color = regionid)) +
  geom_line() +
  theme_get() +
  labs(title = "Rooftop solar installation size by region") +
  labs(x = "Year", y = "Total capacity (kW)") +
  labs(color = "Region")
```

```{r Try heatmap for all region}
heat_all_plot <- actual_demand_june |>
  ggplot(aes(DATE, TIME, fill = OPERATIONAL_DEMAND)) +
  geom_tile(color = "white") +
  theme_get() +
  scale_y_time(labels = scales::time_format("%H:%M"), breaks = ) +
  scale_fill_viridis_c(option = "plasma") +
  labs(title = "Heatmap of operational demand \n for all regions in June 2024", size = 2) +
  labs(x = NULL, y = NULL, fill = "Operational Demand (MW)") +
  coord_flip()
```

```{r Mutate week day, include = FALSE}
actual_demand_june <- actual_demand_june |>
  mutate(week_day = wday(DATE, label = TRUE)) |>
  mutate(week_day = fct_relevel(week_day, c("Sun","Sat", "Fri","Thu", "Wed", "Tue", "Mon")))
```

```{r Plot heatmap for all region, include=FALSE}
plots_heatmap_test <- actual_demand_june %>%
  split(.$REGIONID) %>%
  lapply(function(df) {
    ggplot(df, aes(week_day, TIME, fill = OPERATIONAL_DEMAND)) +
      geom_tile(color = "white") +
      theme_minimal() +
      scale_y_time(labels = scales::time_format("%H:%M")) +
      scale_fill_viridis_c(option = "plasma", 
                           guide = guide_colorbar(barwidth = 1, barheight = 8)) +  # Adjust legend size
      labs(title = unique(df$REGIONID)) +
      labs(x = NULL, y = NULL) +
      labs(fill = "Demand (MW)") +
      coord_flip() +
      theme(
        legend.position = "right",  # Keep the legend but make it smaller
        legend.title = element_text(size = 10),  # Adjust legend title size
        legend.text = element_text(size = 8),    # Adjust legend text size
        plot.title = element_text(hjust = 0.5, size = 14),  # Center and resize title
        axis.text = element_text(size = 10)  # Increase axis text size for readability
      )
  })

combined_plot <- wrap_plots(plots_heatmap_test, ncol = 2)
```

> *The Australian National Electricity Market (NEM) is facing challenges due to the increasing integration of distributed energy resources, particularly rooftop solar generation. These energy sources introduce complexity in balancing supply and demand, a task managed by the Australian Energy Market Operator (AEMO). This report explores the impact of the "Duck Curve" on electricity demand patterns and the "invisible" role of rooftop solar in the market.*

## Problem Description

The integration of distributed solar energy into the NEM is creating challenges for system operators, particularly with the growing penetration of rooftop solar systems. Many experts are discussing these issues, including [Matt Rennie from EY](https://www.linkedin.com/pulse/distributed-energy-system-balancing-need-policy-matt-rennie/), who highlights the "invisibility of distributed energy" as a growing concern for system operators. This phenomenal is commonly known as the "Duck Curve". It represents the mismatch between energy demand and renewable energy supply, particularly solar energy, throughout the day. The 'duck shape' emerges as solar power generation increases in the middle of the day and sharply declines towards the evening, when electricity demand is highest. This curve highlights a challenge for grid operators who must balance this energy supply-demand gap to avoid potential outages or the need for expensive, non-renewable energy sources during peak demand.

## Data Description

The data used in this analysis is derived from the National Electricity Market (NEM) operated by the Australian Energy Market Operator (AEMO). The dataset includes hourly energy demand and supply metrics, focusing on solar energy generation, over a given period. The data helps visualise the duck curve by comparing the total demand with solar energy contributions throughout the day.

Based on the official dataset description, the dataset includes the following key variables:

| Variables Name     | Data Types   | Mean                                            |
|---------------------|------------------|----------------------------------|
| INTERVAL_DATETIME  | date         | Date time interval for operational demand value |
| REGIONID           | Varchar2(20) | Region identifier                               |
| OPERATIONAL_DEMAND | number(10,0) | Operational demand value                        |
| LASTCHANGED        | date         | Last date and time record changed               |

: Variable description {#tbl-variable-desc}

As @tbl-variable-desc shows, the dataset includes information on operational demand, region identifiers, and the date and time of the last record change. This data is essential for understanding the dynamics of energy demand and supply in the NEM. However, since the Interval_Datetime variables is stored as character instead of date as stated in the official record shown above, we need to convert it into a date-time format and break it down for further analysis.

Since AEMO tracked each day of a month in a separated csv file, we need to write a snippet of code to load and combine all the data into one dataset. The data was then cleaned and transformed to facilitate the analysis. The code used to do so is as follows:

```{r}
#| eval: FALSE
#| echo: TRUE
#| code-fold: true

# Step 1: List all the CSV files in the folder
folder_path <- "data/Public_Actual_Demand_2024_June"
file_list_1 <- list.files(path = folder_path, full.names = TRUE)

# Step 2: Load and combine all CSV files into one dataset
actual_demand_june <- do.call(rbind, lapply(file_list_1, function(file) {
  read_csv(file, skip = 2, n_max = 240, col_select = -c(1,2,3,4), col_name = FALSE)
}))
actual_demand_june <- actual_demand_june %>%
  rename(
    REGIONID = X5,
    INTERVAL_DATETIME = X6,
    OPERATIONAL_DEMAND = X7,
    OPERATIONAL_DEMAND_ADJUSTMENT = X8,
    WDR_ESTIMATE = X9,
    LASTCHANGED = X10)
# Step 3: Clean the data
actual_demand_june <- actual_demand_june |>
  mutate(
    DATE = as.Date(INTERVAL_DATETIME),
    TIME = str_extract(INTERVAL_DATETIME, pattern = "\\d{2}:\\d{2}:\\d{2}"),
    REGIONID = as.factor(REGIONID),
    OPERATIONAL_DEMAND = as.numeric(OPERATIONAL_DEMAND),
    OPERATIONAL_DEMAND_ADJUSTMENT = as.numeric(OPERATIONAL_DEMAND_ADJUSTMENT),
    WDR_ESTIMATE = as.numeric(WDR_ESTIMATE),
  )
actual_demand_june <- actual_demand_june |>
  mutate(TIME = hms(TIME))
```

## Analysis

In this section, we will explore the Duck Curve by analysing the solar energy contribution throughout the day in comparison with total electricity demand. We will use visualizations to depict how the energy demand shifts across hours of the day and how this contributes to the 'duck shape.'

### Introduction

However, before we dive deeply into the rabbit hole, let's take a moment to understand the context of how the energy market works and what magic is performed behind the curtain.

#### Demand and supply in the energy market

The most basic yet important concept in the energy market is the balance between supply and demand. The electricity system operator must ensure that the amount of electricity generated matches the amount consumed at all time. In Australia, this is maintained and operated by the Australian Energy Market Operator (AEMO). They achieve this through 2 key mechanisms:

-   **Real-Time Market Operations:** AEMO operates the electricity market in real-time. Generators submit bids to supply electricity, and the market determines the dispatch of power based on demand and supply conditions.

-   **Frequency Control:** AEMO closely monitors the electricity grid frequency, which is set at 50 Hz in Australia. This frequency is a key indicator of the balance between supply and demand. When demand exceeds supply, the frequency tends to drop below 50 Hz. Conversely, when supply exceeds demand, the frequency rises above 50 Hz. Maintaining the frequency at or very close to 50 Hz is critical for the stability of the grid.

Thanks to the increasing popularity of rooftop solar panels, many households and businesses are now generating their own electricity. This distributed energy generation has a significant impact on the energy market, as it introduces a new source of supply that is not centrally controlled by AEMO. This is where the "invisible" player comes into play.

#### The "Duck Curve"

The "Duck Curve" is a term used to describe the shape of the electricity demand curve over the course of a day [@jonesalbertus_2017_confronting]. The curve gets its name from its resemblance to a duck, with the belly of the duck representing the minimum demand during the day and the neck and head representing the peak demand in the evening.

```{r plot_mean}
#| label: fig-1
#| fig.cap: 'Mean operational demand for all regions in June 2024'
#| fig.align: 'center'
#| fig.pos: 'H'
#| out.width: '80%'
plot_duck
```

We can see the change of this curve over the course of the day, with the lowest demand occurring in the early hours of the morning and the highest demand occurring in the evening. This pattern is consistent across all regions, with some variation in the magnitude of demand. It is also important to note that this pattern is repeated every day, regardless of the day of the week, as shown in @fig-2 below:

```{r combined_plot}
#| label: fig-2
#| fig.width: 12
#| fig.height: 8 
#| fig.align: 'center'
#| fig.cap: 'Heatmap of operational demand for all regions in June 2024'
#| fig.pos: 'H'
#| out.width: '100%'

combined_plot  
```

Can you see the duck now?

```{r}
#| included: FALSE
line_plot_mean <- actual_mean |>
  ggplot(aes(x = TIME, y = mean_demand, color = REGIONID)) +
  geom_line(linewidth = 0.8) +
  scale_x_time(labels = scales::time_format("%H:%M")) +
  scale_colour_brewer(palette = "Paired") +
  labs(title = "Mean operational demand for all regions in June 2024") +
  theme_get() +
  theme(panel.background = element_rect(colour = "white"),
        panel.grid.major.x = element_line(color = "black", size = 0.1))
line_plot_mean |>
  ggsave(filename = "line_plot_demand.png")
```

![Quack quack, Here I am.](line_plot_demand_with_duck.png)

#### Key results and method: Rooftop solar generation estimation

Due to the fact that AEMO can not directly regulated and control the output of rooftop solar panels, they have to come up with a mechanism to manage the impact of distributed energy generation on the grid. Based on the dataset that AEMO provided to the public, which can be found [here](https://nemweb.com.au/Reports/ARCHIVE/ROOFTOP_PV/ACTUAL/), they have somehow managed to estimate the output of rooftop solar generation in each region. The data included:

-   **REGIONID:** The region where the data was collected.

-   **INTERVAL_DATETIME:** The date and time of the interval.

-   **POWER:** The estimated output of rooftop solar generation in megawatts (MW).

The data was batch-loaded, transform from interval datetime into date, weekday and time in the day with the break of 30 minutes. The data dictionary was also published by AEMO can be found at this [link](https://nemweb.com.au/Reports/Current/MMSDataModelReport/Electricity/MMS%20Data%20Model%20Report_files/MMS_97.htm#1). @fig-3 shows the mean rooftop solar generation for all regions in the NEM over the course of the day. The x-axis represents the time of day, while the y-axis represents the mean demand in red and the mean generation of solar in black. The plot is faceted by region, allowing us to see how rooftop solar generation varies across different parts of the NEM.

```{r plot_gen_comb}
#| label: fig-3
#| fig.align: 'center'
#| fig.cap: 'Mean operational demand and rooftop solar generation for all regions in June 2024'
#| fig.pos: 'H'
#| out.width: '80%'
#| out.height: '80%'
plot_gen_comb
```

We can see that despite of the fact that AEMO did not have a mechanism to directly track and manage the output of the rooftop solar generator, their model did performed quite well and successfully capture the impact of these distributed energy resources on the grid.

## Conclusion

In conclusion, the "Duck Curve" and the "invisible" role of rooftop solar generation are two key factors shaping the future of the Australian energy market. This provide an opportunity for the energy market to evolve and adapt to the changing landscape of distributed energy resources. By understanding these dynamics and developing innovative solutions, we can ensure a reliable and sustainable energy future for all Australians.

## References
